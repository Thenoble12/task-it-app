{"version":3,"sources":["logo.svg","ShowTask.js","EditTask.js","Task.js","TodoList.js","App.js","index.js"],"names":["ShowTask","task","catArr","classArr","handleToggle","deleteTask","class","type","value","name","readonly","Badge","bg","category","onClick","e","id","EditTask","disable","handleSubmit","setNewTaskCategory","newTaskCategory","setNewTaskName","onSubmit","onChange","target","placeholder","required","defaultValue","disabled","Task","setTasks","tasks","useState","editToggle","setEditToggle","newTaskName","preventDefault","newObject","details","user_id","fetch","method","headers","body","JSON","stringify","then","r","json","data","newTaskList","map","object","TodoList","taskName","setTaskName","taskUserId","taskdetails","setTaskdetails","taskCategory","setTaskCategory","handleDelete","deleted","newTasks","filter","useEffect","tasksData","console","log","taskInfo","App","className","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.a51e2baa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\nimport Badge from 'react-bootstrap/Badge'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Task.css';\n\n\nfunction ShowTask({ task, catArr, classArr, handleToggle, deleteTask }) {\n  return (\n    <div class=\"task\">    \n        <div class=\"content\">           \n             <input type=\"text\" class=\"text\" value={task.name} readonly />            \n        </div>\n        <div class=\"actions\">\n             <button><Badge bg={classArr[task.category]}>{catArr[task.category]}</Badge></button>   \n             <button onClick={()=>handleToggle()} class=\"edit\">Edit</button>\n             <button onClick={(e)=>{deleteTask(e, task.id)}} class=\"delete\">Delete</button>         \n        </div>\n    </div>   \n  )\n}\n\nexport default ShowTask","import React from 'react'\n\nfunction EditTask({ task, disable, catArr, handleSubmit, setNewTaskCategory, newTaskCategory, setNewTaskName, handleToggle }) {\n  return (\n    <div class=\"task\">    \n        <form id=\"task-form\" onSubmit={handleSubmit}>\n            <div class=\"content\">           \n                <input onChange={(e)=>setNewTaskName(e.target.value)} type=\"text\" id=\"task-input\" placeholder={task.name} required />\n            </div>\n            <div class=\"actions\">\n                <select name=\"category\" id=\"task-category-select\" value={newTaskCategory} onChange={(e)=>setNewTaskCategory(e.target.value)} defaultValue={task.category} placeholder={catArr[task.category]} required>\n                                    <option value=\"default\" disabled>Select Category</option>\n                                    <option value=\"1\">Social</option>\n                                    <option value=\"2\">Business</option>\n                                    <option value=\"3\">Work</option>\n                                    <option value=\"4\">Home</option>\n                </select>   \n                <button type=\"submit\" id=\"task-submit\" disabled={disable}>Submit</button>  \n                <button onClick={()=>{handleToggle()}} class=\"delete\">Cancel</button>         \n            </div>\n        </form>       \n    </div>  \n  )\n}\n\nexport default EditTask","import React, { useState } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Task.css';\nimport ShowTask from './ShowTask';\nimport EditTask from './EditTask';\n\nfunction Task({task, deleteTask, setTasks, tasks}) {\n\n  const [ editToggle, setEditToggle ] = useState(0)\n  const [ newTaskName, setNewTaskName ] = useState(\"\")  \n  const [ newTaskCategory, setNewTaskCategory ] = useState(\"default\")\n\n  const classArr = [\"\", \"primary\", \"success\", \"warning\", \"info\"] \n  const catArr = [\"\", \"Social\", \"Business\", \"Work\", \"Home\"]\n\n  const disable = !newTaskName || !newTaskCategory || newTaskCategory === \"default\"\n  // const URL = \"http://localhost:9292/\"\n\n  const handleToggle = () => {\n    editToggle ?  setEditToggle(0) : setEditToggle(1)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n      const newObject = { id: task.id, \n                    name: newTaskName,\n                    details: task.details,\n                    category: newTaskCategory,\n                    user_id: task.user_id }\n      \n      fetch(`tasks/${task.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            name: newTaskName,\n            details: task.details,\n            category: newTaskCategory\n        })\n      })\n        .then((r) => r.json())\n        .then((data) => {          \n            handleToggle()\n            let taskCopy = tasks           \n            \n            let newTaskList = taskCopy.map(object => {\n               if (object.id === task.id) return newObject \n               return object              \n            })\n\n            setTasks(newTaskList)\n            setTasks(newTaskList)\n      });  \n  }  \n\n  return (\n    <>\n        { editToggle ? <EditTask task={task} \n                                 disable={disable}\n                                 catArr={catArr}\n                                 handleSubmit={handleSubmit}\n                                 handleToggle={handleToggle}\n                                 setNewTaskCategory={setNewTaskCategory}\n                                 newTaskCategory={newTaskCategory}\n                                 setNewTaskName={setNewTaskName} /> \n\n                     : <ShowTask task={task}\n                                 catArr={catArr}\n                                 classArr={classArr}\n                                 handleToggle={handleToggle}\n                                 deleteTask={deleteTask} />\n        }\n    </>    \n  )\n}\n\nexport default Task","import React, { useState, useEffect } from 'react';\nimport './TodoList.css';\nimport Task from './Task';\n\nfunction TodoList() {\n\n  const [ tasks, setTasks ] = useState([])  \n  const [ taskName, setTaskName ] = useState(\"\")\n  const [ taskUserId, setTaskUserId ] = useState(1)\n  const [ taskdetails, setTaskdetails ] = useState(\"\")\n  const [ taskCategory, setTaskCategory ] = useState(\"default\")\n\n//  const URL = \"http://localhost:9292/\"\n  const disable = !taskName || !taskCategory || taskCategory === \"default\"\n\n  const resetForm = () => {\n    setTaskName(\"\")\n    setTaskdetails(\"\")\n    setTaskCategory(\"default\")\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();       \n\n    const taskInfo = {\n        name: taskName,\n        details: taskdetails,\n        category: taskCategory,\n        user_id: taskUserId,\n    }   \n    console.log(taskInfo)\n    fetch(`/tasks`, {\n        method: 'POST',\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(taskInfo),\n    })\n        .then((r) => r.json())\n        .then((data) => {\n            setTasks([...tasks, data])\n            resetForm()\n        })\n    }    \n\n    const handleDelete = (e,id) => {\n        e.preventDefault();\n\n        fetch(`/tasks/${id}`, {\n            method: \"DELETE\",\n        })\n       .then((r) => r.json())\n       .then((deleted) => { \n        const newTasks = tasks.filter((task) => deleted.id !== task.id)     \n        setTasks(newTasks) \n       })        \n    }    \n\n    useEffect(() => {\n        fetch(`/tasks`)               \n        .then((r) => r.json())\n        .then((tasksData) => {setTasks(tasksData)\n                              console.log(tasks)\n        })               \n    }, [])\n\n    \n\n   return (\n     <div>\n        <header>\n            \n            <h1>Task-it</h1>\n            <form id=\"task-form\" onSubmit={handleSubmit}>    \n\n                <input onChange={(e)=>setTaskName(e.target.value)} type=\"text\" id=\"task-input\" placeholder=\"Enter new task\" required />                                               \n                \n                <select name=\"category\" id=\"task-category-select\" value={taskCategory} onChange={(e)=>setTaskCategory(e.target.value)} defaultValue=\"default\" placeholder=\"-select-\" required>\n                    <option value=\"default\" disabled>Select Category</option>\n                    <option value=\"1\">Social</option>\n                    <option value=\"2\">Business</option>\n                    <option value=\"3\">Work</option>\n                    <option value=\"4\">Home</option>\n                </select>\n\n                <button type=\"submit\" id=\"task-submit\" value=\"Add task\" disabled={disable}>Add task</button>        \n            </form>\n\n        </header>\n\n        <main>\n            <section class=\"task-list\">                \n                <h2>Tasks</h2>\n                <div id=\"tasks\">                       \n                    { tasks.map((task, id) => <Task task={task} id={id} deleteTask={handleDelete} setTasks={setTasks} tasks={tasks}/> ) }                   \n                </div>\n            </section>\n        </main>\n    </div>\n  )\n}\n\nexport default TodoList","import logo from './logo.svg';\nimport './App.css';\nimport TodoList from './TodoList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}